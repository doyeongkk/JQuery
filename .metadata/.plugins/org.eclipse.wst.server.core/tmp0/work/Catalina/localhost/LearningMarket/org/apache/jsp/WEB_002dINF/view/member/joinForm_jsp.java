/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.37
 * Generated at: 2020-12-21 02:50:52 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.view.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class joinForm_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Learning Market : 회원가입</title>\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.print(request.getContextPath());
      out.write("/js/jquery-3.5.1.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.print(request.getContextPath());
      out.write("/js/memberJoinCheck.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("$(function(){ \r\n");
      out.write("   var chkMemId = \"\";  // 중복 체크할 때의 ID가 저장될 변수\r\n");
      out.write("   var chkMemNic = \"\";\r\n");
      out.write("   // 중복확인 클릭\r\n");
      out.write("   $(\"#idCheck\").on(\"click\", function(){\r\n");
      out.write("      var memId = $(\"#mem_id\").val();     // 입력한 회원ID 읽어오기\r\n");
      out.write("      \r\n");
      out.write("      $.ajax({\r\n");
      out.write("         url : \"");
      out.print(request.getContextPath());
      out.write("/member/idcheck.do\",\r\n");
      out.write("         method : \"post\",\r\n");
      out.write("         data : { \"mem_id\" : memId },\r\n");
      out.write("         dataType : \"json\",\r\n");
      out.write("         success : function(result){\r\n");
      out.write("            \r\n");
      out.write("            if(result==\"OK\"){  // 중복되지 않을 때\r\n");
      out.write("               $(\"#idChkResult\").html(\"사용가능ID\");\r\n");
      out.write("               chkMemId = memId;  // 검사가 완료된 회원ID를 전역변수에 저장\r\n");
      out.write("            }else{ \r\n");
      out.write("               $(\"#idChkResult\").html(\"ID중복 - 사용불가\");\r\n");
      out.write("               chkMemId = \"\";\r\n");
      out.write("            }\r\n");
      out.write("         },\r\n");
      out.write("         error : function(xhr){\r\n");
      out.write("            alert(\"상태 : \" + xhr.status);\r\n");
      out.write("         }\r\n");
      out.write("      });\r\n");
      out.write("      \r\n");
      out.write("   });\r\n");
      out.write("   \r\n");
      out.write("   $(\"#nickCheck\").on(\"click\", function(){\r\n");
      out.write("      var nickname = $(\"#nick_name\").val();\r\n");
      out.write("      \r\n");
      out.write("      $.ajax({\r\n");
      out.write("         url : \"");
      out.print(request.getContextPath());
      out.write("/member/idcheck.do\",\r\n");
      out.write("         method : \"post\",\r\n");
      out.write("         data : { \"nick_name\" : nickname },\r\n");
      out.write("         dataType : \"json\",\r\n");
      out.write("         success : function(result){\r\n");
      out.write("            \r\n");
      out.write("            if(result==\"OK\"){  // 중복되지 않을 때\r\n");
      out.write("               $(\"#nickChkResult\").html(\"사용가능\");\r\n");
      out.write("               chkMemNic = memId;  // 검사가 완료된 회원ID를 전역변수에 저장\r\n");
      out.write("            }else{ \r\n");
      out.write("               $(\"#nickChkResult\").html(\"닉네임중복 - 사용불가\");\r\n");
      out.write("               chkMemNic = \"\";\r\n");
      out.write("            }\r\n");
      out.write("         },\r\n");
      out.write("         error : function(xhr){\r\n");
      out.write("            alert(\"상태 : \" + xhr.status);\r\n");
      out.write("         }\r\n");
      out.write("      });\r\n");
      out.write("   })\r\n");
      out.write("   \r\n");
      out.write("   // 가입하기버튼클릭 --> form의 submit될 때\r\n");
      out.write("   $(\"#memberForm\").on(\"submit\", function(){\r\n");
      out.write("      var memId = $(\"#mem_id\").val(); \r\n");
      out.write("      var idchk = $(\"#idChkResult\").html().trim();\r\n");
      out.write("      \r\n");
      out.write("      if(chkMemId!= memId || idchk!=\"사용가능ID\"){\r\n");
      out.write("         alert(\"ID가 중복됩니다. 새로운 ID를 입력하세요.\");\r\n");
      out.write("         return false;  // 서버로의 전송을 취소한다.\r\n");
      out.write("      }\r\n");
      out.write("      return true;  // 서버로 전송작업을 수행한다.\r\n");
      out.write("   });\r\n");
      out.write("   \r\n");
      out.write("})\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("<style>\r\n");
      out.write("#wrapper {\r\n");
      out.write("   border: 2px solid salmon;\r\n");
      out.write("   border-radius: 5px;;\r\n");
      out.write("   width: 500px;\r\n");
      out.write("   height:650px;\r\n");
      out.write("   margin: auto;\r\n");
      out.write("/*    font-size:50px;  */\r\n");
      out.write("   font-weight: bold;\r\n");
      out.write("   padding-left : 20px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".title {\r\n");
      out.write("   text-align: center;\r\n");
      out.write("   font-size: 40px;\r\n");
      out.write("   font-weight: bold;\r\n");
      out.write("   color: black;\r\n");
      out.write("   margin: 80px 0px 80px 0px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("label {\r\n");
      out.write("   width: 130px;\r\n");
      out.write("   display: inline-block;\r\n");
      out.write("   text-align: left;\r\n");
      out.write("   font-size: 15px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("input {\r\n");
      out.write("   margin: 3px 5px;\r\n");
      out.write("   border-radius: 3px;\r\n");
      out.write("   background-color: transparent;\r\n");
      out.write("   border: 1px solid darkgray;\r\n");
      out.write("   height: 30px;\r\n");
      out.write("   outline: none;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#signup {\r\n");
      out.write("   text-align: center;\r\n");
      out.write("   margin: 5px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("input[type=button], input[type=reset] {\r\n");
      out.write("   border: 1px solid salmon;\r\n");
      out.write("   border-radius: 3px;\r\n");
      out.write("   background-color: transparent;\r\n");
      out.write("   margin: 0px;\r\n");
      out.write("   height: 24px;\r\n");
      out.write("   color: salmon;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("input[type=button]:hover, input[type=reset]:hover {\r\n");
      out.write("   background-color: salmon;\r\n");
      out.write("   transition-duration: 1s;\r\n");
      out.write("   color: white;\r\n");
      out.write("   outline: none;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#roadAddress, #detailAddress {\r\n");
      out.write("   width: 280px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".regex {\r\n");
      out.write("   font-size: 12px;\r\n");
      out.write("   text-align: center;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write(" <div class=\"title\">회원 가입 정보 입력</div>\r\n");
      out.write("   <form id=\"memberForm\" action=\"");
      out.print(request.getContextPath());
      out.write("/member/join.do\" method=\"post\">\r\n");
      out.write("        <div id=\"wrapper\"><br>   \r\n");
      out.write("            <label>아이디 </label><input type=\"text\" name=\"mem_id\" id=\"mem_id\" required=\"\" placeholder=\"아이디\">\r\n");
      out.write("              <input type=\"button\" id=\"idCheck\" value=\"중복확인\">\r\n");
      out.write("         \t<span id=\"idChkResult\"></span><br><br><br>\r\n");
      out.write("            \r\n");
      out.write("            <div class=\"id regex\"></div>\r\n");
      out.write("            \r\n");
      out.write("            <label>비밀번호 </label><input type=\"password\" name=\"mem_pass\" id=\"mem_pass\" required=\"\" placeholder=\"비밀번호\"><br>\r\n");
      out.write("            <div class=\"pw regex\"></div><br><br>\r\n");
      out.write("            \r\n");
      out.write("            <label>비밀번호 확인 </label><input type=\"password\" name=\"mem_pass2\" id=\"mem_pass2\" required=\"\" placeholder=\"비밀번호 확인\"><br>\r\n");
      out.write("            <div class=\"repw regex\"></div><br><br>\r\n");
      out.write("            \r\n");
      out.write("            <label>이름 </label><input type=\"text\" name=\"mem_nm\" id=\"mem_nm\" required=\"\" placeholder=\"이름\"><br>\r\n");
      out.write("            <div class=\"name regex\"></div><br><br>\r\n");
      out.write("            \r\n");
      out.write("            <label>닉네임 </label><input type=\"text\" name=\"nick_name\" id=\"nick_name\" required=\"\" placeholder=\"닉네임\">\r\n");
      out.write("         <input type=\"button\" id=\"nickCheck\" value=\"중복확인\">\r\n");
      out.write("         <span id=\"nickChkResult\"></span><br><br><br>\r\n");
      out.write("         \r\n");
      out.write("            <label>이메일 </label><input type=\"email\" name=\"mem_email\" id=\"mem_email\" required=\"\" placeholder=\"이메일\"><br>\r\n");
      out.write("            <div class=\"email regex\"></div><br><br>\r\n");
      out.write("            \r\n");
      out.write("            <label>전화번호 </label><input type=\"text\" name=\"mem_hp\" id=\"mem_hp\" required=\"\" placeholder=\"전화번호\"><br>\r\n");
      out.write("            <div class=\"phone regex\"></div><br><br>\r\n");
      out.write("\r\n");
      out.write("            <div id=\"signup\">\r\n");
      out.write("           <input type=\"submit\" name=\"signup\" value=\"가입하기\" id=\"signupbtn\">\r\n");
      out.write("            <input type=\"reset\" value=\"다시입력\" id=\"resignupbtn\">\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("</form>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
